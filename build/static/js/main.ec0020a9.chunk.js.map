{"version":3,"sources":["config.js","auth/index.js","user/Signup.js","user/Signin.js","core/Home.js","auth/AdminRoute.js","admin/AdminMenu.js","admin/AdminDashboardLayout.js","user/AdminDashboard.js","admin/apiAdmin.js","js/main.js","admin/AddCategory.js","admin/AddProduct.js","admin/Orders.js","admin/ManageProducts.js","admin/UpdateProduct.js","admin/OrdersProcessing.js","admin/OrdersDelCancel.js","admin/Banner.js","user/VerifyPhone.js","user/apiUser.js","admin/AdminProfile.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","Signup","useState","name","email","password","phone","error","success","values","setValues","handleChange","event","target","value","clickSubmit","user","preventDefault","fetch","method","headers","Accept","body","stringify","then","response","json","catch","err","console","log","data","to","className","id","style","fontSize","class","for","onChange","type","placeholder","aria-describedby","onClick","display","Signin","loading","redirectToReferrer","signin","next","setItem","authenticate","action","onSubmit","htmlFor","verified_phone","_id","role","Home","token","AdminRoute","Component","component","rest","render","props","pathname","state","from","location","isActive","history","path","slideOut","$","toggleClass","withRouter","children","href","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","removeItem","res","signout","push","AdminDashboardLayout","title","description","useEffect","AdminDashboard","src","alt","width","height","getCategories","getStatusValues","userId","Authorization","updateOrderStatus","orderId","status","loading_start_bool","_is","document","getElementById","AddCategory","isLoading","setIsLoading","photo","formData","setError","setSuccess","categories","setCategories","showModal","setShowModal","modalData","editformData","FormData","editCategoryInputData","setEditCategoryInputData","editCategorySuccess","setEditCategorySuccess","handleCloseModal","handleUpdateCategory","catId","updateCategory","loadCategories","handleCategoryeditChange","files","set","e","category","createCategory","handleRemoveCategory","removeCategory","showSuccess","showError","autoFocus","required","map","c","i","buttons","image","columns","label","field","sort","rows","striped","bordered","hover","searching","sortable","categoryTable","Modal","size","show","onHide","Header","closeButton","Title","Body","defaultValue","Footer","AddProduct","price","shipping","quantity","qty_type","pincode","offer","createdProduct","redirectToProfile","product","createProduct","accept","key","Orders","orders","setOrders","statusValues","setStatusValues","setShow","setModalData","handleClose","loadOrders","listOrders","showStatus","q","index","selected","length","orders_row","p","paidbyuser","paid","payment_method","orderedby","substr","showstatus","amountinrs","amount","smallid","total_address","address","city","district","land_marks","orderProducts","products","aria-hidden","print","printable","item","count","btn","responsive","dataTableOrders","srcset","ManageProducts","setProducts","loadProducts","destroy","productId","deleteProduct","UpdateProduct","match","formdata","init","getProduct","params","updateProduct","redirectUser","OrdersProcessing","listOrdersProcessing","OrdersDelCancel","listOrdersDelcancel","Banner","banners","setBanners","handledeleteBanner","bannerId","deleteBanner","loadBanners","banner","createBanner","d","bannerTable","VerifyPhone","otp","verifyPhone","jwt","veryfied_phone","makephone","done","signUpform","AdminProfile","read","updateUserName","update","auth","updateuser","currentpassword","setPassword","handleChangePaassword","handlepasswordChange","updatepassword","showUsernameSuccess","showUsernameError","showPasswordSuccess","showPasswordError","Routes","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.ec0020a9.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","\r\nimport { API } from '../config'\r\n\r\nexport const signUp = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n\r\n        .catch(err => {\r\n            console.log(err);\r\n\r\n        })\r\n\r\n}\r\n\r\nexport const signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n\r\n        .catch(err => {\r\n            console.log(err);\r\n\r\n        })\r\n\r\n}\r\n\r\nexport const authenticate = (data,next)=>{\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.setItem('jwt',JSON.stringify(data));\r\n        next();\r\n    }\r\n}\r\n\r\nexport const signout = (next)=>{\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        return fetch(`${API}/signout`,{\r\n            method:\"GET\",\r\n        })\r\n        .then(res=>{\r\n            console.log(\"signout\",res);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = ()=>{\r\n    if(typeof window == 'undefined'){\r\n        return false;\r\n    }\r\n    if(localStorage.getItem('jwt')){\r\n        return JSON.parse(localStorage.getItem('jwt'))\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport const makephone = (data)=>{\r\n    if(data){\r\n        let jwt=[]\r\n        if(typeof window == 'undefined'){\r\n            return false;\r\n        }\r\n        if(localStorage.getItem('jwt')){\r\n            jwt=JSON.parse(localStorage.getItem('jwt'));\r\n            jwt.user.veryfied_phone=true;\r\n            localStorage.setItem('jwt',JSON.stringify(jwt));\r\n            return true\r\n    \r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Link,Redirect } from 'react-router-dom';\r\nimport { signUp } from '../auth/index';\r\nimport { isAuthenticated } from '../auth/index'\r\n\r\n\r\nconst Signup = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        phone: '',\r\n        error: '',\r\n        success: false\r\n    });\r\n\r\n\r\n    const { name, email, password, phone, error, success } = values;\r\n\r\n    const handleChange = name => event => {\r\n\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [name]: event.target.value\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            error: false\r\n        })\r\n        signUp({ name, email, phone, password })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error, success: false })\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: '',\r\n                        email: '',\r\n                        password: '',\r\n                        phone: '',\r\n                        error: '',\r\n                        success: true\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const signUpform = () => (\r\n        <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\"><label class=\"small mb-1\" for=\"inputFirstName\">First Name</label>\r\n                        <input class=\"form-control py-4\" onChange={handleChange('name')} value={name} id=\"inputFirstName\" type=\"text\" placeholder=\"Enter full name\" /></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"small mb-1\" for=\"inputEmailAddress\">Email</label>\r\n                <input class=\"form-control py-4\" onChange={handleChange('email')} value={email} type=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email address\" />\r\n            </div>\r\n            <div class=\"form-row\">\r\n\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\"><label class=\"small mb-1\" for=\"inputFirstName\">Phone</label>\r\n                        <div className=\"input-group\">\r\n\r\n                            <span className=\"input-group-prepend\"><button className=\"btn btn-primary\">+91</button></span>\r\n                            <input class=\"form-control py-4\" onChange={handleChange('phone')} value={phone} type=\"number\" placeholder=\"Enter Phone\" /></div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\"><label class=\"small mb-1\" for=\"inputPassword\">Password</label>\r\n                        <input class=\"form-control py-4\" onChange={handleChange('password')} value={password} type=\"password\" placeholder=\"Enter password\" /></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group mt-4 mb-0\">\r\n                <button onClick={clickSubmit} className=\"btn btn-primary btn-block\">Create Account</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    )\r\n    const showSuccess = () => {\r\n\r\n        return (<div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            New Account is Created. Please <Link to='/signin'>Signin</Link>\r\n        </div>)\r\n    }\r\n\r\n\r\n    if(isAuthenticated()){\r\n        return <Redirect to='/'></Redirect>\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-primary\" id=\"layoutAuthentication\">\r\n            <div className=\"nav\" style={{ fontSize: '24px' }}>\r\n                <Link className=\"nav-link text-white\" to=\"/\"> <i class=\"fas fa-angle-left\"></i> Back</Link>\r\n            </div>\r\n            <div id=\"layoutAuthentication_content\">\r\n                <main>\r\n                    <div class=\"container\">\r\n                        <div class=\"row justify-content-center\">\r\n                            <div class=\"col-lg-7\">\r\n                                <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\r\n                                    <div class=\"card-header\"><h3 class=\"text-center font-weight-light my-4\">Join 7 MART !</h3></div>\r\n                                    <div class=\"card-body\">\r\n                                        {signUpform()}\r\n                                        <div className=\"mt-3\">\r\n                                            {showSuccess()}\r\n                                            {showError()}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card-footer text-center\">\r\n                                        <div class=\"small\"><Link to='/signin'>Have an account? Go to login</Link></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Signup;","import React, { useState } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { signin, authenticate, isAuthenticated } from '../auth/index';\r\n\r\n\r\nconst Signin = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        phone: '',\r\n        password: '',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer: false,\r\n    });\r\n\r\n    const { phone, password, error, loading, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [name]: event.target.value\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            loading: true,\r\n        })\r\n        signin({ phone, password })\r\n            .then(data => {\r\n                if (data.error || data.err) {\r\n                    setValues({ ...values, error: data.error || data.err, loading: false })\r\n                } else {\r\n                    authenticate(data, () => {\r\n                        setValues({\r\n                            ...values,\r\n                            redirectToReferrer: true,\r\n\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const signUpform = () => (\r\n        <form action=\"\" onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"text-muted small mb-1\">Phone</label>\r\n                <div className=\"input-group\">\r\n                    <span className=\"input-group-prepend\">\r\n                        <button className=\"btn btn-primary\">+91</button>\r\n                    </span>\r\n                    <input onChange={handleChange('phone')} value={phone} type=\"number\" name=\"\" id=\"\" placeholder=\"Phone Number\" className=\"form-control\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"text-muted small mb-1\">Password</label>\r\n                <input onChange={handleChange('password')} value={password} type=\"password\" placeholder=\"Password\" name=\"\" id=\"\" className=\"form-control\" />\r\n            </div>\r\n            <div class=\"form-group mt-4 mb-0\">\r\n                <button onClick={clickSubmit} className=\"btn btn-primary btn-block\">Login</button>\r\n                </div>\r\n        </form>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    )\r\n    const showLoading = () => (\r\n        loading && (\r\n            <div className=\"aler alert-info\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        )\r\n    );\r\n\r\n    const redirectuser = () => {\r\n        if (redirectToReferrer) {\r\n            if (user && user.verified_phone === false) {\r\n                return <Redirect to={`/user/${user._id}/verifyphone/${user.phone}`}></Redirect>\r\n            }\r\n            if (user && user.role === 1) {\r\n                return <Redirect to='/admin/dashboard'></Redirect>\r\n            } else if (user && user.role === 2) {\r\n                return <Redirect to='/dboy/dashboard'></Redirect>\r\n            } else {\r\n                return <Redirect to='/user/dashboard'></Redirect>\r\n            }\r\n        }\r\n\r\n        if (isAuthenticated()) {\r\n            return <Redirect to='/'></Redirect>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"bg-primary\" id=\"layoutAuthentication\">\r\n            <div className=\"nav\" style={{ fontSize: '24px' }}>\r\n                <Link className=\"nav-link text-white\" to=\"/\"> <i class=\"fas fa-angle-left\"></i> Back</Link>\r\n            </div>\r\n            <div id=\"layoutAuthentication_content\">\r\n                <main>\r\n                    <div class=\"container\">\r\n                        <div class=\"row justify-content-center\">\r\n                            <div class=\"col-lg-7\">\r\n                                <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\r\n                                    <div class=\"card-header\"><h3 class=\"text-center font-weight-light my-4\">Login</h3></div>\r\n                                    <div class=\"card-body\">\r\n                                        {signUpform()}\r\n                                        <div className=\"mt-3\">\r\n                                            {showLoading()}\r\n                                            {showError()}\r\n                                            {redirectuser()}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card-footer text-center\">\r\n                                        <div class=\"small\"><Link to='/signup'>Create an account? Go to SignUp</Link></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Signin;","import React, { useState, useEffect, Fragment } from 'react';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth';\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            7 mart home please\r\n            {\r\n                isAuthenticated().token != null ? (\r\n\r\n                    <Link to='/admin/dashboard'> Dashboard</Link>\r\n                ) : (\r\n\r\n                        <Link to='/signin'> Login</Link>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport {isAuthenticated} from './index'\r\n\r\nconst AdminRoute =({component: Component,...rest})=>(\r\n    <Route {...rest} render={props => isAuthenticated() && isAuthenticated().user.role===1 ?(\r\n        <Component {...props}></Component>\r\n    ):(\r\n        <Redirect to={{pathname:'/signin',state:{from: props.location}}}></Redirect>\r\n    )}></Route>\r\n);\r\n\r\nexport default AdminRoute;","import React, { Fragment, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { signout, isAuthenticated } from '../auth/index'\r\nimport $ from 'jquery'\r\n\r\n\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return \"active\"\r\n    } else {\r\n        return 'null'\r\n    }\r\n}\r\n\r\nconst slideOut = () => {\r\n    $(\"body\").toggleClass(\"sb-sidenav-toggled\");\r\n    \r\n}\r\n\r\n\r\n\r\nconst AdminMenu = ({ history, children }) => (\r\n    <Fragment>\r\n        <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\">7 MART</a><button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" onClick={slideOut} href=\"#\"><i className=\"fas fa-bars\"></i></button>\r\n            {\r\n                isAuthenticated() && (\r\n                    <Fragment>\r\n                        <div className=\"--\">\r\n\r\n                            {\r\n                                isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                                    <Link className=\"nav-link text-white ml-3\" to=\"/\"> Home</Link>\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                    </Fragment>\r\n\r\n                )\r\n            }\r\n            <ul className=\"navbar-nav ml-auto ml-md-0\">\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" id=\"userDropdown\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user fa-fw\"></i></a>\r\n                    <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\r\n    <Link className=\"dropdown-item\" to={`/admin/profile/${isAuthenticated()&& isAuthenticated().user._id}`}>Edit Profile</Link>\r\n                        {/* <a className=\"dropdown-item\" href=\"#\">Activity Log</a> */}\r\n                        <div className=\"dropdown-divider\"></div>\r\n\r\n                        <Link className=\"dropdown-item\"\r\n                            onClick={() => signout(() => {\r\n                                history.push('/');\r\n                            })}\r\n                            to=\"/\">\r\n                            <i className=\"fa fa-user text-danger\"></i> SignOut</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        <div id=\"layoutSidenav\">\r\n            <div id=\"layoutSidenav_nav\">\r\n                <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n                    <div className=\"sb-sidenav-menu\">\r\n                        <div className=\"nav \">\r\n\r\n                            <div className=\"sb-sidenav-menu-heading\">Profile</div>\r\n                            <Link className={`${isActive(history, '/admin/dashboard')} nav-link`} to='/admin/dashboard'>\r\n                                <div className=\"sb-nav-link-icon\">\r\n                                    <i className=\"fas fa-tachometer-alt\"></i>\r\n                                </div>\r\n                                Dashboard\r\n                            </Link>\r\n\r\n                            <div className=\"sb-sidenav-menu-heading\">Order</div>\r\n                            <Link className={`${isActive(history, '/admin/orders')} nav-link`} to='/admin/orders'>\r\n                                <div className=\"sb-nav-link-icon\">\r\n                                    <i class=\"fas fa-bell\"></i>\r\n                                </div>\r\n                                Order\r\n                            </Link>\r\n                            <Link className={`${isActive(history, '/admin/orders-processing')} nav-link`} to='/admin/orders-processing'>\r\n                                <div className=\"sb-nav-link-icon\">\r\n                                    <i class=\"fas fa-shipping-fast\"></i>\r\n                                </div>\r\n                                Order Processing\r\n                            </Link>\r\n                            <Link className={`${isActive(history, '/admin/orders-delcancel')} nav-link`} to='/admin/orders-delcancel'>\r\n                                <div className=\"sb-nav-link-icon\">\r\n                                    <i class=\"fas fa-archive\"></i>\r\n                                </div>\r\n                                Order Delivered & Cancelled\r\n                            </Link>\r\n\r\n\r\n                            <div className=\"sb-sidenav-menu-heading\">Products</div>\r\n                            <Link className={`${isActive(history, '/create/product')} nav-link`} to='/create/product'>\r\n                                <div className=\"sb-nav-link-icon\">\r\n                                    <i class=\"fas fa-boxes\"></i>\r\n                                </div>\r\n                                Create Products\r\n                            </Link>\r\n                            <Link className={`${isActive(history, '/admin/Products')} nav-link`} to='/admin/Products'>\r\n                                <div className=\"sb-nav-link-icon\">\r\n                                    <i class=\"fas fa-box-open\"></i>\r\n                                </div>\r\n                                Manage Products\r\n                            </Link>\r\n                            <Link className={`${isActive(history, '/create/category')} nav-link`} to='/create/category'>\r\n                                <div className=\"sb-nav-link-icon\">\r\n                                    <i class=\"fas fa-anchor\"></i>\r\n                                </div>\r\n                                Category\r\n                            </Link>\r\n\r\n                            \r\n                            <div className=\"sb-sidenav-menu-heading\">Delivery</div>\r\n                            <Link className={`${isActive(history, '/admin/banner')} nav-link`} to='/admin/banner'>\r\n                                <div className=\"sb-nav-link-icon\">\r\n                                    <i class=\"fas fa-biking\"></i>\r\n                                </div>\r\n                                Banner\r\n                            </Link>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sb-sidenav-footer\">\r\n                        <div className=\"small\">Logged in as:</div>\r\n                        {\r\n                            isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                                isAuthenticated().user.name\r\n                            )\r\n                        }\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    </Fragment>\r\n)\r\n\r\nexport default withRouter(AdminMenu);","import React, { useEffect } from 'react';\r\nimport '../admin_ds/css/styles.css'\r\nimport AdminMenu from './AdminMenu';\r\n\r\n\r\nconst AdminDashboardLayout = ({ title = 'Title', description = 'Description', className='container-fluid', children }) => {\r\n\r\n\r\n\r\n    useEffect(() => {\r\n    })\r\n    //\r\n\r\n    return (\r\n        <div>\r\n\r\n            <AdminMenu>\r\n\r\n            <div id=\"layoutSidenav_content\">\r\n                <main>\r\n                    <div className={className} >{children}</div>\r\n                </main>\r\n            </div>\r\n            </AdminMenu>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AdminDashboardLayout;\r\n","import React, { useEffect, Fragment } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link } from 'react-router-dom'\r\nimport AdminDashboardLayout from '../admin/AdminDashboardLayout'\r\nimport '../styles.css'\r\n\r\nconst AdminDashboard = () => {\r\n\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const { user: { _id, name, email, role } } = isAuthenticated();\r\n\r\n\r\n\r\n    const adminInfo = () => {\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"admin_profile p-4\">\r\n                {/* <div className=\"my-loader\"></div> */}\r\n\r\n                \r\n\r\n\r\n                <h3 className=\"mb-3\">Admin Information</h3>\r\n                <div className=\"row pl-3 mt-4\">\r\n                    <img src=\"/img/user-placeholder.jpg\" alt=\"\" width=\"100px\" height=\"100px\" className=\"rounded-circle float-left\" />\r\n                    <div className=\"ml-3 mt-3\">\r\n                        <h5>{name}</h5>\r\n                        <h6>{email}</h6>\r\n                        <p className=\"textmuted\">Admin</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* <div class=\"row\">\r\n                    <div class=\"col-xl-3 col-md-6\">\r\n                        <div class=\"card  bg-primary text-white mb-4\">\r\n                            <div className=\"card-header\">Products</div>\r\n                            <div class=\"card-body\">\r\n                                <h6 className=\"display-3 float-left\">--</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-3 col-md-6\">\r\n                        <div class=\"card  bg-primary text-white mb-4\">\r\n                            <div className=\"card-header\">--</div>\r\n                            <div class=\"card-body\">\r\n                                <h6 className=\"display-3 float-left\">13</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-3 col-md-6\">\r\n                        <div class=\"card  bg-primary text-white mb-4\">\r\n                            <div className=\"card-header\">Products</div>\r\n                            <div class=\"card-body\">\r\n                                <h6 className=\"display-3 float-left\">13</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-3 col-md-6\">\r\n                        <div class=\"card  bg-primary text-white mb-4\">\r\n                            <div className=\"card-header\">Products</div>\r\n                            <div class=\"card-body\">\r\n                                <h6 className=\"display-3 float-left\">13</h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <AdminDashboardLayout title=\"Dashboard\" description={`Hey ${name}`} className=\"container\">\r\n\r\n            {adminInfo()}\r\n\r\n        </AdminDashboardLayout>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard;","\r\nimport { API } from '../config'\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: category,\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n\r\n        .catch(err => {\r\n            console.log(err);\r\n\r\n        })\r\n\r\n}\r\n\r\nexport const createProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n\r\n        .catch(err => {\r\n            console.log(err);\r\n\r\n        })\r\n\r\n}\r\n\r\nexport const getCategories = () => {\r\n\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const listOrders = (userId, token) => {\r\n\r\n    return fetch(`${API}/order/list/notdelivered/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const listOrdersDelcancel = (userId, token) => {\r\n\r\n    return fetch(`${API}/order/list/delcancel/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const listOrdersProcessing = (userId, token) => {\r\n\r\n    return fetch(`${API}/order/list/processing/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getStatusValues = (userId, token) => {\r\n\r\n    return fetch(`${API}/order/status-values/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n\r\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-type\": 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ status, orderId })\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\n\r\nexport const getProducts = () => {\r\n\r\n    return fetch(`${API}/products?limit=1000`, {\r\n        method: \"GET\",\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const deleteProduct = (productId, userId, token, ) => {\r\n\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-type\": 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getProduct = (productId) => {\r\n\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\",\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getDboyList = (userId, token) => {\r\n\r\n    return fetch(`${API}/dboy/list/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const assignDboy = (userId, token, orderId, dboyId) => {\r\n\r\n    return fetch(`${API}/order/${orderId}/dboy/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ dboy: dboyId })\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const makeDboy = (userId, token, email) => {\r\n\r\n    return fetch(`${API}/dboy/make/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ email: email })\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const fireDboy = (userId, token, email) => {\r\n\r\n    return fetch(`${API}/dboy/fire/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ email: email })\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\nexport const updateCategory = (userId, token, catId, name) => {\r\n\r\n    return fetch(`${API}/category/${catId}/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: name\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\nexport const removeCategory = (userId, token, catId) => {\r\n\r\n    return fetch(`${API}/category/${catId}/${userId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const createBanner = (userId, token, banner) => {\r\n    return fetch(`${API}/banner/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: banner\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n\r\n        .catch(err => {\r\n            console.log(err);\r\n\r\n        })\r\n\r\n}\r\nexport const getBanners = () => {\r\n\r\n    return fetch(`${API}/banner/list`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const deleteBanner = (userId, token, bannerId) => {\r\n    return fetch(`${API}/banner/delete/${userId}/${bannerId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n\r\n        .catch(err => {\r\n            console.log(err);\r\n\r\n        })\r\n\r\n}","\r\n// var loader = ;\r\nexport function loading_start(){\r\n    document.getElementById('my-loader').style.display=\"block\";\r\n}\r\nexport function loading_stop(){\r\n}\r\n\r\n\r\nexport function loading_start_bool(_is){\r\n    if(_is){\r\n        document.getElementById('my-loader').style.display=\"block\";\r\n        document.getElementById('my-loader-img').style.display=\"block\";\r\n    }else{\r\n        document.getElementById('my-loader').style.display=\"none\";\r\n        document.getElementById('my-loader-img').style.display=\"none\";\r\n    }\r\n}","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { createCategory, getCategories, removeCategory, updateCategory } from './apiAdmin'\r\nimport AdminDashboardLayout from './AdminDashboardLayout'\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { API } from '../config'\r\nimport { loading_start_bool } from '../js/main'\r\n\r\n\r\nconst AddCategory = () => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        photo: '',\r\n        formData: ''\r\n    })\r\n\r\n\r\n    const {\r\n        name,\r\n        formData\r\n    } = values;\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [modalData, setModalData] = useState({})\r\n    const [editCategoryInputData, setEditCategoryInputData] = useState({\r\n        name: '',\r\n        photo: '',\r\n        editformData: new FormData()\r\n    });\r\n    const { editformData } = editCategoryInputData;\r\n    const [editCategorySuccess, setEditCategorySuccess] = useState(false)\r\n    const handleCloseModal = () => setShowModal(false);\r\n    const handleShowModal = (category) => {\r\n        setModalData(category)\r\n        setShowModal(true);\r\n    };\r\n\r\n\r\n    const handleUpdateCategory = (id) => {\r\n        updateCategory(user._id, token, id, editCategoryInputData).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                loadCategories()\r\n                setEditCategorySuccess(true)\r\n                setEditCategoryInputData('')\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleCategoryeditChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        editformData.set(name, value)\r\n        setEditCategoryInputData({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const editCategoryModal = () => {\r\n        return (\r\n            <Modal size='lg' show={showModal} onHide={handleCloseModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit category</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {editCategorySuccess ? 'Category Updated' : null}\r\n\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" className=\"form-control\" onChange={handleCategoryeditChange('name')} defaultValue={modalData.name} name=\"\" id=\"\" placeholder='Category Name' autoFocus required />\r\n\r\n                    </div>\r\n                    <div class=\"input-group mt-3\">\r\n                        <div class=\"custom-file\">\r\n                            <input onChange={handleCategoryeditChange('photo')} type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" />\r\n                            <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <img src={`${API}/category/photo/${modalData._id}`} className=\"img-thumbnail  border-0\" alt=\"\" width=\"50px\" height=\"50px\" />\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-secondary\" onClick={handleCloseModal}>\r\n                        Close\r\n                    </button>\r\n                    <button className=\"btn btn-primary\" onClick={(e) => handleUpdateCategory(modalData._id)}>\r\n                        Update\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    //destruct user and info from localstorage\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const clickSubmit = (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setSuccess(false)\r\n        setIsLoading(true);\r\n\r\n\r\n        //make request to api to create category\r\n        // setError(JSON.stringify(formData))\r\n        createCategory(user._id, token, formData)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setError(true);\r\n                    setIsLoading(false);\r\n\r\n                } else {\r\n                    loadCategories()\r\n                    setError('');\r\n                    setSuccess(true);\r\n                    setIsLoading(false);\r\n\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    const loadCategories = () => {\r\n        setIsLoading(true);\r\n        getCategories().then((data) => {\r\n            setCategories(data)\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const handleRemoveCategory = (catId) => {\r\n        setIsLoading(true);\r\n        removeCategory(user._id, token, catId).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setIsLoading(false);\r\n            } else {\r\n                loadCategories()\r\n                setIsLoading(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setValues({\r\n            ...values,\r\n            formData: new FormData()\r\n        })\r\n\r\n        setEditCategoryInputData({\r\n            ...editCategoryInputData,\r\n            editformData: new FormData()\r\n        })\r\n        loadCategories();\r\n    }, [])\r\n\r\n    const categoryTable = (categories) => {\r\n        categories.map((c, i) => {\r\n            categories[i].buttons = <Fragment>\r\n                {/* <button className=\"btn btn-sm btn-warning mr-2\" onClick={(e) => handleShowModal(c)}>\r\n                    <i className=\"fa fa-edit\"></i>\r\n                </button> */}\r\n                <button className=\"btn btn-sm btn-danger \" onClick={(e) => handleRemoveCategory(c._id)}>\r\n                    <i className=\"fa fa-ban\"></i>\r\n                </button>\r\n            </Fragment>\r\n            categories[i].image = <img src={`${API}/category/photo/${categories[i]._id}`} className=\"img-thumbnail  border-0\" alt=\"\" width=\"100px\" height=\"100px\" />\r\n        })\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Id',\r\n                    field: '_id',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Image',\r\n                    field: 'image',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Controls',\r\n                    field: 'buttons',\r\n                    sort: 'asc',\r\n                },\r\n            ],\r\n            rows: categories\r\n        }\r\n\r\n        return (\r\n            <MDBDataTable\r\n                striped\r\n                bordered\r\n                hover\r\n                searching\r\n                sortable\r\n                data={data}\r\n            />\r\n        );\r\n    }\r\n\r\n    const newCategoryFrom = () => (\r\n        <form onSubmit={clickSubmit} className=\"mb-4\">\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange('name')} value={name} name=\"\" id=\"\" placeholder='Category Name' autoFocus required />\r\n\r\n            </div>\r\n            <div class=\"input-group mt-3\">\r\n                <div class=\"custom-file\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" />\r\n                    <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\r\n                </div>\r\n                <span className=\"input-group-append\"><button className=\"btn btn-outline-primary\">Create</button></span>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return <h3 className=\"text-success\">{name} is created</h3>\r\n        }\r\n    }\r\n    const showError = () => {\r\n        if (error) {\r\n            return <h3 className=\"text-danger\">Category should be unique</h3>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <AdminDashboardLayout title=\"Add a new category\" description={`Hey ${user.name} ready to add category`} >\r\n            {loading_start_bool(isLoading)}\r\n            <div className=\"\">\r\n                <ol class=\"breadcrumb mb-4 mt-4\">\r\n                    <li class=\"breadcrumb-item\"><Link to='/admin/dashboard'>Dashboard</Link></li>\r\n                    <li class=\"breadcrumb-item active\">Category</li>\r\n                    <div className=\"ml-auto\">\r\n                    </div>\r\n                </ol>\r\n                {showSuccess()}\r\n                {showError()}\r\n                {newCategoryFrom()}\r\n                {categoryTable(categories)}\r\n                {editCategoryModal()}\r\n            </div>\r\n\r\n        </AdminDashboardLayout>\r\n    )\r\n\r\n\r\n};\r\nexport default AddCategory;","import React, { useState, useEffect } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { createProduct, getCategories } from './apiAdmin'\r\nimport AdminDashboardLayout from './AdminDashboardLayout'\r\nimport { loading_start_bool } from '../js/main'\r\n\r\nconst AddProduct = () => {\r\n\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        qty_type: '',\r\n        pincode: '',\r\n        offer: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    })\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        qty_type,\r\n        pincode,\r\n        offer,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    //load categories and set form data\r\n\r\n    const init = () => {\r\n        setValues({\r\n            ...values,\r\n            formData: new FormData()\r\n        })\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error\r\n                })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [])\r\n\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        setValues({\r\n            ...values,\r\n            error: '',\r\n            loading: true,\r\n        });\r\n\r\n        createProduct(user._id, token, formData)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({\r\n                        ...values,\r\n                        error: JSON.stringify(data.error) + JSON.stringify(formData)\r\n                    })\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: '',\r\n                        description: '',\r\n                        price: '',\r\n                        quantity: '',\r\n                        loading: false,\r\n                        createdProduct: data.name\r\n                    })\r\n                    console.log(values);\r\n\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n    const newPostFrom = () => (\r\n        <form action=\"\" className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post photo</h4>\r\n            <div className=\"formgroup\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" onChange={handleChange('name')} value={name} className=\"form-control\" id=\"\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} value={description} className=\"form-control\" id=\"\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input type=\"number\" onChange={handleChange('price')} value={price} className=\"form-control\" id=\"\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\" >\r\n                    <option >Plaese Select</option>\r\n                    {\r\n                        categories && categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>{c.name}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\" >\r\n                    <option >Plaese Select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input type=\"number\" onChange={handleChange('quantity')} value={quantity} className=\"form-control\" id=\"\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Qty Type</label>\r\n                <select onChange={handleChange('qty_type')} className=\"form-control\" >\r\n                    <option >Plaese Select</option>\r\n                    <option value=\"kg\">Kg</option>\r\n                    <option value=\"gm\">gm</option>\r\n                    <option value=\"Piece\">Piece</option>\r\n                    <option value=\"Packet\">Packet</option>\r\n                    <option value=\"Bottle\">Bottle</option>\r\n                    <option value=\"Box\">Box</option>\r\n\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Pincode</label>\r\n                <textarea type=\"number\" onChange={handleChange('pincode')} value={pincode} className=\"form-control\" id=\"\" />\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Offer Amount <small>Set to 0 for no offer</small> </label>\r\n                <input type=\"number\" onChange={handleChange('offer')} value={offer} className=\"form-control\" id=\"\" />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n\r\n        </form>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    )\r\n    const showSucces = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct} is created`}</h2>\r\n        </div>\r\n    )\r\n\r\n    const showLoading = () => (\r\n        loading_start_bool(loading)\r\n    )\r\n\r\n    return (\r\n        <AdminDashboardLayout title=\"Add a new category\" description={`Hey ${user.name} ready to add category`} >\r\n\r\n            <div className=\"\">\r\n                <ol class=\"breadcrumb mb-4 mt-4\">\r\n                    <li class=\"breadcrumb-item\"><Link to='/admin/dashboard'>Dashboard</Link></li>\r\n                    <li class=\"breadcrumb-item active\">Create Products</li>\r\n                </ol>\r\n                {showLoading()}\r\n                {showSucces()}\r\n                {showError()}\r\n                {newPostFrom()}\r\n            </div>\r\n\r\n        </AdminDashboardLayout>\r\n    )\r\n\r\n}\r\n\r\nexport default AddProduct;","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { listOrders, getStatusValues, updateOrderStatus, getDboyList, assignDboy } from './apiAdmin'\r\nimport AdminDashboardLayout from './AdminDashboardLayout'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { API } from '../config';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { loading_start_bool } from '../js/main'\r\nimport print from 'print-js'\r\n\r\nconst Orders = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [statusValues, setStatusValues] = useState([])\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const [success, setSuccess] = useState([])\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [modalData, setModalData] = useState([])\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (orderProducts) => {\r\n        setModalData(orderProducts)\r\n        setShow(true);\r\n    };\r\n\r\n\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log((data.error));\r\n                    setIsLoading(false)\r\n                } else {\r\n                    setOrders(data)\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log((data.error));\r\n                } else {\r\n                    setStatusValues(data)\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n        loadStatusValues()\r\n    }, [])\r\n\r\n    const showordersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <li class=\"breadcrumb-item active\">Total Orders: {orders.length}</li>\r\n            )\r\n        } else {\r\n            return (\r\n                <li class=\"breadcrumb-item active\">No Orders</li>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const handleStatusChange = (event, orderId) => {\r\n        setIsLoading(true)\r\n        updateOrderStatus(user._id, token, orderId, event.target.value)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log('status uppdate failed');\r\n                    setIsLoading(false)\r\n\r\n                } else {\r\n                    loadOrders();\r\n                    setSuccess(orderId)\r\n                }\r\n            })\r\n    }\r\n\r\n    const showStatus = (q) => (\r\n        <div className=\"form-group\">\r\n            {success === q._id ? \"updated\" : null}\r\n            <select onChange={(e) => handleStatusChange(e, q._id)} className=\"form-control\">\r\n                <option> Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status} selected={q.status === status ? true : false}>{status}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n\r\n    const productModal = () => {\r\n        return (\r\n            <Modal size='lg' show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Ordered Products</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {\r\n                        modalData.map((item, i) => {\r\n                            return (\r\n                                <div className=\"row m-4\">\r\n                                    <div className=\"col-3\">\r\n                                        <img src={`${API}/products/photo/${item._id}`} alt=\"\" srcset=\"\" />\r\n                                    </div>\r\n                                    <div className=\"col-9\">\r\n                                        <div className=\"row\">\r\n                                            <h5 className=\"font-weight-normal\">{item.name}</h5>\r\n                                            <h6 className=\"text-muted\">{item.description}</h6>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4\">\r\n                                                <p className=\"text-muted\">₹{item.price}</p>\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <p className=\"text-muted\">Quantity: {item.count}</p>\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <p className=\"text-muted\">total: {item.price * item.count}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const dataTableOrders = (orders_row) => {\r\n        // orders_row = {...orders_row,products: 123}\r\n        orders_row.map((p, i) => {\r\n\r\n            orders_row[i].paidbyuser = <div>\r\n                <p>₹{p.paid}</p><p>{p.payment_method}</p>\r\n            </div>\r\n\r\n\r\n            orders_row[i].orderedby = <Fragment> {p.user.name} <br /> {p.user._id.substr(p.user._id.length - 5)}</Fragment >\r\n            //orders_row[i].orderedbyId=p.user._id\r\n            orders_row[i].showstatus = showStatus(p)\r\n            orders_row[i].amountinrs = \"₹\" + p.amount\r\n            orders_row[i].smallid = p._id.substr(p._id.length - 8)\r\n            orders_row[i].total_address = <h6>{p.address.address}<br />\r\n                {p.address.city}<br />\r\n                {p.address.district}<br />\r\n                {p.address.state}<br />\r\n                {p.pincode}<br />\r\n                {p.address.land_marks}<br /> </h6>\r\n\r\n            orders_row[i].buttons = <Fragment>\r\n                <button className=\"btn btn-sm btn-success m-1\" onClick={(e) => handleShow(orders_row[i].products)}>\r\n                    <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                <button className=\"btn btn-sm btn-danger m-1\" onClick={(e) => print({\r\n                    printable: `\r\n                   \r\n        <p id=\"header\">INVOICE ${orders_row[i]._id}</p>\r\n        \r\n        <div  style=\"width:45%;float:left;\">\r\n        <u>Customer Address</u><br />\r\n                    ${p.address.address}<br />\r\n                    ${p.address.city}<br />\r\n                    ${p.address.district}<br />\r\n                    ${p.address.state}<br />\r\n                    ${p.pincode}<br />\r\n                    ${p.address.land_marks}<br /> \r\n        </div>\r\n        <div style=\"width:45%;float:left;\">\r\n        <u>Customer Contact</u><br />\r\n                    ${p.user.name}<br />\r\n                    ${p.user.phone}<br />\r\n        </div>\r\n\t\t\r\n\t\t<table id=\"items\" style=\"width:100%; margin-top:15px;\">\r\n\t\t\r\n\t\t  <tr style=\"text-align:left;\">\r\n\t\t      <th>Index</th>\r\n\t\t      <th>Name</th>\r\n\t\t      <th>Quantity</th>\r\n\t\t      <th>Type</th>\r\n\t\t      <th>Price (inc Offer)</th>\r\n          </tr>\r\n          \r\n          ${orders_row[i].products.map((item, index) => (\r\n                        `<tr class=\"item-row\">\r\n                            <td class=\"item-name\">${index + 1}</td>\r\n                            <td class=\"description\"><p>${item.name}</p></td>\r\n                            <td><p class=\"cost\">₹${item.price}</p></td>\r\n                            <td><p class=\"qty\">${item.count} ${item.qty_type}</p></td>\r\n                            <td><span class=\"price\">₹${(item.offer!=null && item.offer>0 ?item.price-item.offer: item.price) * item.count}</span></td>\r\n                        </tr>`\r\n                    ))}\r\n\t\t  <tr>\r\n\t\t      <td colspan=\"2\" class=\"blank\"> </td>\r\n\t\t      <td colspan=\"2\" class=\"total-line\">Delivery Fee</td>\r\n\r\n\t\t      <td class=\"total-value\"><p id=\"paid\">₹${orders_row[i].amount<1024?'25':'0'}</p></td>\r\n\t\t  </tr>\r\n\t\t  <tr>\r\n\t\t      <td colspan=\"2\" class=\"blank\"> </td>\r\n\t\t      <td colspan=\"2\" class=\"total-line\">Total</td>\r\n\t\t      <td class=\"total-value\"><div id=\"subtotal\">${orders_row[i].amountinrs}</div></td>\r\n\t\t  </tr>\r\n\t\t  <tr>\r\n\t\t      <td colspan=\"2\" class=\"blank\"> </td>\r\n\t\t      <td colspan=\"2\" class=\"total-line\">Amount Paid</td>\r\n\r\n\t\t      <td class=\"total-value\"><p id=\"paid\">₹${orders_row[i].paid}</p></td>\r\n\t\t  </tr>\r\n\t\t\r\n\t\t</table>`,\r\n                    type: 'raw-html',\r\n                })} >\r\n                    <i class=\"fa fa-print\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </Fragment >\r\n\r\n\r\n        })\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Id',\r\n                    field: 'smallid',\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'showstatus',\r\n                },\r\n                {\r\n                    label: 'paid',\r\n                    field: 'paidbyuser',\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amountinrs',\r\n                },\r\n                {\r\n                    label: 'Ordered by',\r\n                    field: 'orderedby',\r\n                },\r\n                {\r\n                    label: 'Ordered On',\r\n                    field: 'createdAt',\r\n                },\r\n                {\r\n                    label: 'Delivery Address',\r\n                    field: 'total_address',\r\n                },\r\n                {\r\n                    label: 'Products',\r\n                    field: 'buttons',\r\n                },\r\n            ],\r\n            rows: orders_row\r\n        }\r\n\r\n        return (\r\n            <MDBDataTable\r\n                btn\r\n                striped\r\n                bordered\r\n                hover\r\n                searching\r\n                sortable={true}\r\n                responsive\r\n                data={data}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <AdminDashboardLayout title=\"orders\" description={`Hey ${user.name} You can manage all orders here`} >\r\n            {loading_start_bool(isLoading)}\r\n\r\n            <div>\r\n\r\n                <ol class=\"breadcrumb mb-4 mt-4\">\r\n                    <li class=\"breadcrumb-item\"><Link to='/admin/dashboard'>Dashboard</Link></li>\r\n                    <li class=\"breadcrumb-item active\">Orders</li>\r\n                    <div className=\"ml-auto\">\r\n                        {showordersLength()}\r\n                    </div>\r\n                </ol>\r\n                {dataTableOrders(orders)}\r\n            </div>\r\n            {productModal()}\r\n\r\n        </AdminDashboardLayout>\r\n    )\r\n}\r\n\r\nexport default Orders","import React, { useState, useEffect } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { getProducts, deleteProduct } from './apiAdmin'\r\nimport AdminDashboardLayout from './AdminDashboardLayout'\r\nimport { API } from '../config'\r\nimport { loading_start_bool } from '../js/main'\r\n\r\nconst ManageProducts = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const [products, setProducts] = useState([])\r\n\r\n    const loadProducts = () => {\r\n        setIsLoading(true)\r\n        getProducts().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setIsLoading(false)\r\n            } else {\r\n                setProducts(data)\r\n                setIsLoading(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const destroy = productId => {\r\n        setIsLoading(true)\r\n        deleteProduct(productId, user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setIsLoading(false)\r\n            } else {\r\n                loadProducts();\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, [])\r\n\r\n    return (\r\n        <AdminDashboardLayout title=\"Manage Products\" description=\"Perform CRUD on products\">\r\n            {loading_start_bool(isLoading)}\r\n            <div className=\"\">\r\n                <ol class=\"breadcrumb mb-4 mt-4\">\r\n                    <li class=\"breadcrumb-item\"><Link to='/admin/dashboard'>Dashboard</Link></li>\r\n                    <li class=\"breadcrumb-item active\">Manage Products</li>\r\n                    <li className=\"breadcrumb__text ml-auto\">Total {products.length} products</li>\r\n                </ol>\r\n\r\n                {\r\n                    products.map((p, i) => (\r\n                        <div key={i} className=\"col-12 mb-1 row\">\r\n                            <div className=\"col-4 col-sm-1\">\r\n                                <img src={`${API}/products/photo/${p && p._id}`} className=\"img-thumbnail  border-0\" alt=\"\" width=\"50px\" height=\"50px\" />\r\n                            </div>\r\n                            <div className=\"col-3 pl-0\">\r\n                                <strong>{p.name}</strong>\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <p>{p.category && p.category.name}</p>\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <Link to={`/admin/product/update/${p._id}`}> <span className=\"btn btn-sm btn-warning\"> <span className=\"fa fa-edit\"></span>  </span> </Link>\r\n                                <span onClick={() => destroy(p._id)} className=\"btn btn-sm btn-danger \">Delete</span>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </AdminDashboardLayout>\r\n    )\r\n}\r\n\r\n\r\nexport default ManageProducts","import React, { useState, useEffect } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { getProduct, getCategories, updateProduct } from './apiAdmin'\r\nimport { getProducts } from '../core/apiCore'\r\nimport AdminDashboardLayout from './AdminDashboardLayout'\r\nimport { loading_start_bool } from '../js/main'\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        pincode: '',\r\n        offer: '',\r\n        qty_type: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formdata: ''\r\n    })\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        offer,\r\n        loading,\r\n        pincode,\r\n        qty_type,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    //load categories and set form data\r\n\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error\r\n                })\r\n            } else {\r\n                setValues({\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const init = (productId) => {\r\n        loading_start_bool(true)\r\n        getProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setValues({\r\n                    ...values,\r\n                    error: data.error\r\n                })\r\n            } else {\r\n\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    shipping: data.shipping,\r\n                    quantity: data.quantity,\r\n                    qty_type: data.qty_type,\r\n                    pincode: data.pincode,\r\n                    offer: data.offer,\r\n                    formdata: new FormData()\r\n                })\r\n                initCategories()\r\n                loading_start_bool(false)\r\n\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);\r\n\r\n    }, [])\r\n\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        setValues({\r\n            ...values,\r\n            error: '',\r\n            loading: true,\r\n        });\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({\r\n                        ...values,\r\n                        error: data.error\r\n                    })\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        // name: '',\r\n                        // description: '',\r\n                        // price: '',\r\n                        // quantity: '',\r\n                        // loading: false,\r\n                        // redirectToProfile: true,\r\n                        createdProduct: data.name\r\n                    })\r\n                    console.log(values);\r\n\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n    const newPostFrom = () => (\r\n        <form action=\"\" className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post photo</h4>\r\n            <div className=\"formgroup\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" onChange={handleChange('name')} value={name} className=\"form-control\" id=\"\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} value={description} className=\"form-control\" id=\"\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input type=\"number\" onChange={handleChange('price')} value={price} className=\"form-control\" id=\"\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\" >\r\n                    <option >Plaese Select</option>\r\n                    {\r\n                        categories && categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>{c.name}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\" >\r\n                    <option >Plaese Select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input type=\"number\" onChange={handleChange('quantity')} value={quantity} className=\"form-control\" id=\"\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Qty Type</label>\r\n                <select onChange={handleChange('qty_type')} className=\"form-control\" >\r\n                    <option >Plaese Select</option>\r\n                    <option value=\"kg\">Kg</option>\r\n                    <option value=\"gm\">gm</option>\r\n                    <option value=\"Piece\">Piece</option>\r\n                    <option value=\"Packet\">Packet</option>\r\n                    <option value=\"Bottle\">Bottle</option>\r\n                    <option value=\"Box\">Box</option>\r\n\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Pincode</label>\r\n                <textarea type=\"number\" onChange={handleChange('pincode')} value={pincode} className=\"form-control\" id=\"\" />\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Offer Amount <small>Set to 0 for no offer</small> </label>\r\n                <input type=\"number\" onChange={handleChange('offer')} value={offer} className=\"form-control\" id=\"\" />\r\n            </div>\r\n\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n\r\n        </form>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    )\r\n    const showSucces = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct} is updated`}</h2>\r\n        </div>\r\n    )\r\n\r\n    const showLoading = () => (\r\n        loading_start_bool(loading)\r\n    )\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            // return <Redirect to='/admin/Products'></Redirect>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AdminDashboardLayout title=\"Add a new category\" description={`Hey ${user.name} ready to add category`} >\r\n\r\n            <ol class=\"breadcrumb mb-4 mt-4\">\r\n                <li class=\"breadcrumb-item\"><Link to='/admin/dashboard'>Dashboard</Link></li>\r\n                <li class=\"breadcrumb-item\"><Link to='/admin/Products'>Manage Products</Link></li>\r\n                <li class=\"breadcrumb-item active\">Update Product</li>\r\n            </ol>\r\n            {showLoading()}\r\n            {showSucces()}\r\n            {showError()}\r\n            {newPostFrom()}\r\n            {redirectUser()}\r\n\r\n        </AdminDashboardLayout>\r\n    )\r\n\r\n}\r\n\r\nexport default UpdateProduct;","import React, { useState, useEffect,Fragment } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { getStatusValues, updateOrderStatus, getDboyList, assignDboy,listOrdersProcessing } from './apiAdmin'\r\nimport AdminDashboardLayout from './AdminDashboardLayout'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { API } from '../config';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { loading_start_bool } from '../js/main'\r\n\r\nconst OrdersProcessing = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [statusValues, setStatusValues] = useState([])\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const [success, setSuccess] = useState([])\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [modalData, setModalData] = useState([])\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (orderProducts) => {\r\n        setModalData(orderProducts)\r\n        setShow(true);\r\n    };\r\n\r\n\r\n    const loadOrders = () => {\r\n        listOrdersProcessing(user._id, token)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log((data.error));\r\n                    setIsLoading(false)\r\n                } else {\r\n                    setOrders(data)\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log((data.error));\r\n                } else {\r\n                    setStatusValues(data)\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n        loadStatusValues()\r\n    }, [])\r\n\r\n    const showordersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <li class=\"breadcrumb-item active\">Total Orders: {orders.length}</li>\r\n            )\r\n        } else {\r\n            return (\r\n                <li class=\"breadcrumb-item active\">No Orders</li>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const handleStatusChange = (event, orderId) => {\r\n        setIsLoading(true)\r\n        updateOrderStatus(user._id, token, orderId, event.target.value)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log('status uppdate failed');\r\n                    setIsLoading(false)\r\n\r\n                } else {\r\n                    loadOrders();\r\n                    setSuccess(orderId)\r\n                }\r\n            })\r\n    }\r\n\r\n    const showStatus = (q) => (\r\n        <div className=\"form-group\">\r\n            {success === q._id ? \"updated\" : null}\r\n            <select onChange={(e) => handleStatusChange(e, q._id)} className=\"form-control\">\r\n                <option> Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status} selected={q.status === status ? true : false}>{status}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n\r\n    const productModal = () => {\r\n        return (\r\n            <Modal size='lg' show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Ordered Products</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {\r\n                        modalData.map((item, i) => {\r\n                            return (\r\n                                <div className=\"row m-4\">\r\n                                    <div className=\"col-3\">\r\n                                        <img src={`${API}/products/photo/${item._id}`} alt=\"\" srcset=\"\" />\r\n                                    </div>\r\n                                    <div className=\"col-9\">\r\n                                        <div className=\"row\">\r\n                                            <h5 className=\"font-weight-normal\">{item.name}</h5>\r\n                                            <h6 className=\"text-muted\">{item.description}</h6>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4\">\r\n                                                <p className=\"text-muted\">₹{item.price}</p>\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <p className=\"text-muted\">Quantity: {item.count}</p>\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <p className=\"text-muted\">total: {item.price * item.count}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n    const dataTableOrders = (orders_row) => {\r\n        // orders_row = {...orders_row,products: 123}\r\n        orders_row.map((p, i) => {\r\n            orders_row[i].buttons = <Fragment>\r\n                <button className=\"btn btn-sm btn-success mr-1\" onClick={(e) => handleShow(orders_row[i].products)}>\r\n                    <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n            </Fragment>\r\n\r\n            orders_row[i].orderedby = <Fragment> {p.user.name} <br /> {p.user._id.substr(p.user._id.length - 5)}</Fragment >\r\n            //orders_row[i].orderedbyId=p.user._id\r\n            orders_row[i].showstatus = showStatus(p)\r\n            orders_row[i].amountinrs = \"₹\" + p.amount\r\n            orders_row[i].smallid = p._id.substr(p._id.length - 8)\r\n            orders_row[i].total_address = <h6>{p.address.address}<br/>\r\n                                                {p.address.city}<br/>\r\n                                                {p.address.district}<br/>\r\n                                                {p.address.state}<br/> \r\n                                                {p.pincode}<br/>\r\n                                                {p.address.land_marks}<br/> </h6>\r\n\r\n        })\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Id',\r\n                    field: 'smallid',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'showstatus',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Transaction Id',\r\n                    field: 'transaction_id',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amountinrs',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Ordered by',\r\n                    field: 'orderedby',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Ordered On',\r\n                    field: 'createdAt',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Delivery Address',\r\n                    field: 'total_address',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Products',\r\n                    field: 'buttons',\r\n                    sort: 'asc',\r\n                },\r\n            ],\r\n            rows: orders_row\r\n        }\r\n\r\n        return (\r\n            <MDBDataTable\r\n                btn\r\n                striped\r\n                bordered\r\n                hover\r\n                searching\r\n                sortable\r\n                responsive\r\n                data={data}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <AdminDashboardLayout title=\"orders\" description={`Hey ${user.name} You can manage all orders here`} >\r\n{loading_start_bool(isLoading)}\r\n            <div>\r\n\r\n                <ol class=\"breadcrumb mb-4 mt-4\">\r\n                    <li class=\"breadcrumb-item\"><Link to='/admin/dashboard'>Dashboard</Link></li>\r\n                    <li class=\"breadcrumb-item active\">Orders</li>\r\n                    <div className=\"ml-auto\">\r\n                        {showordersLength()}\r\n                    </div>\r\n                </ol>\r\n                {dataTableOrders(orders)}\r\n            </div>\r\n            {productModal()}\r\n\r\n        </AdminDashboardLayout>\r\n    )\r\n}\r\n\r\nexport default OrdersProcessing","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { listOrdersDelcancel, getStatusValues, updateOrderStatus, getDboyList, assignDboy } from './apiAdmin'\r\nimport AdminDashboardLayout from './AdminDashboardLayout'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { API } from '../config';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { loading_start_bool } from '../js/main'\r\n\r\nconst OrdersDelCancel = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [statusValues, setStatusValues] = useState([])\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const [success, setSuccess] = useState([])\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [modalData, setModalData] = useState([])\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (orderProducts) => {\r\n        setModalData(orderProducts)\r\n        setShow(true);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const loadOrders = () => {\r\n        listOrdersDelcancel(user._id, token)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log((data.error));\r\n                    setIsLoading(false)\r\n                } else {\r\n                    setOrders(data)\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log((data.error));\r\n                } else {\r\n                    setStatusValues(data)\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n        loadStatusValues()\r\n    }, [])\r\n\r\n    const showordersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <li class=\"breadcrumb-item active\">Total Orders: {orders.length}</li>\r\n            )\r\n        } else {\r\n            return (\r\n                <li class=\"breadcrumb-item active\">No Orders</li>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const handleStatusChange = (event, orderId) => {\r\n        setIsLoading(true)\r\n        updateOrderStatus(user._id, token, orderId, event.target.value)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    console.log('status uppdate failed');\r\n                    setIsLoading(false)\r\n\r\n                } else {\r\n                    loadOrders();\r\n                    setSuccess(orderId)\r\n                }\r\n            })\r\n    }\r\n\r\n    const showStatus = (q) => (\r\n        <div className=\"form-group\">\r\n            {success === q._id ? \"updated\" : null}\r\n            <select onChange={(e) => handleStatusChange(e, q._id)} className=\"form-control\">\r\n                <option> Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status} selected={q.status === status ? true : false}>{status}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n\r\n    const productModal = () => {\r\n        return (\r\n            <Modal size='lg' show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Ordered Products</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {\r\n                        modalData.map((item, i) => {\r\n                            return (\r\n                                <div className=\"row m-4\">\r\n                                    <div className=\"col-3\">\r\n                                        <img src={`${API}/products/photo/${item._id}`} alt=\"\" srcset=\"\" />\r\n                                    </div>\r\n                                    <div className=\"col-9\">\r\n                                        <div className=\"row\">\r\n                                            <h5 className=\"font-weight-normal\">{item.name}</h5>\r\n                                            <h6 className=\"text-muted\">{item.description}</h6>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4\">\r\n                                                <p className=\"text-muted\">₹{item.price}</p>\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <p className=\"text-muted\">Quantity: {item.count}</p>\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <p className=\"text-muted\">total: {item.price * item.count}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn btn-secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const dataTableOrders = (orders_row) => {\r\n        // orders_row = {...orders_row,products: 123}\r\n        orders_row.map((p, i) => {\r\n            orders_row[i].buttons = <Fragment>\r\n                <button className=\"btn btn-sm btn-success mr-1\" onClick={(e) => handleShow(orders_row[i].products)}>\r\n                    <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </Fragment>\r\n\r\n            orders_row[i].orderedby = <Fragment> {p.user.name} <br /> {p.user._id.substr(p.user._id.length - 5)}</Fragment >\r\n            //orders_row[i].orderedbyId=p.user._id\r\n            orders_row[i].showstatus = showStatus(p)\r\n            orders_row[i].amountinrs = \"₹\" + p.amount\r\n            orders_row[i].smallid = p._id.substr(p._id.length - 8)\r\n            orders_row[i].total_address = <h6>{p.address.address}<br/>\r\n                                                {p.address.city}<br/>\r\n                                                {p.address.district}<br/>\r\n                                                {p.address.state}<br/> \r\n                                                {p.pincode}<br/>\r\n                                                {p.address.land_marks}<br/> </h6>\r\n\r\n        })\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Id',\r\n                    field: 'smallid',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'showstatus',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Transaction Id',\r\n                    field: 'transaction_id',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amountinrs',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Ordered by',\r\n                    field: 'orderedby',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Ordered On',\r\n                    field: 'createdAt',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Delivery Address',\r\n                    field: 'total_address',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Products',\r\n                    field: 'buttons',\r\n                    sort: 'asc',\r\n                },\r\n            ],\r\n            rows: orders_row\r\n        }\r\n\r\n        return (\r\n            <MDBDataTable\r\n                btn\r\n                striped\r\n                bordered\r\n                hover\r\n                searching\r\n                sortable\r\n                responsive\r\n                data={data}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <AdminDashboardLayout title=\"orders\" description={`Hey ${user.name} You can manage all orders here`} >\r\n        {loading_start_bool(isLoading)}\r\n\r\n            <div>\r\n\r\n                <ol class=\"breadcrumb mb-4 mt-4\">\r\n                    <li class=\"breadcrumb-item\"><Link to='/admin/dashboard'>Dashboard</Link></li>\r\n                    <li class=\"breadcrumb-item active\">Orders</li>\r\n                    <div className=\"ml-auto\">\r\n                        {showordersLength()}\r\n                    </div>\r\n                </ol>\r\n                {dataTableOrders(orders)}\r\n            </div>\r\n            {productModal()}\r\n\r\n        </AdminDashboardLayout>\r\n    )\r\n}\r\n\r\nexport default OrdersDelCancel","import React, { useState, useEffect } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link } from 'react-router-dom'\r\nimport { getBanners, createBanner, deleteBanner } from './apiAdmin'\r\nimport AdminDashboardLayout from './AdminDashboardLayout'\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport { API } from '../config'\r\nimport { loading_start_bool } from '../js/main'\r\n\r\n\r\n\r\nconst Banner = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const [banners, setBanners] = useState([]);\r\n    const [error, setError] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    //destruct user and info from localstorage\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n\r\n\r\n    const handledeleteBanner = (bannerId) => {\r\n        setError('');\r\n        setSuccess(true)\r\n\r\n        //make request to api to create category\r\n        // setError(JSON.stringify(formData))\r\n        setIsLoading(true)\r\n        deleteBanner(user._id, token, bannerId)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setError(true);\r\n                    setIsLoading(false)\r\n                } else {\r\n                    loadBanners();\r\n                    setError('');\r\n                    setSuccess('Banner Deleted');\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n\r\n    const loadBanners = () => {\r\n        getBanners().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setIsLoading(false)\r\n            } else {\r\n                setBanners(data);\r\n                setIsLoading(false)\r\n            }\r\n        })\r\n    }\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        photo: '',\r\n        formData: ''\r\n    })\r\n\r\n\r\n    const {\r\n        name,\r\n        formData\r\n    } = values;\r\n\r\n\r\n    const clickSubmit = (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setSuccess(false)\r\n        setIsLoading(true)\r\n\r\n\r\n        //make request to api to create category\r\n        // setError(JSON.stringify(formData))\r\n        createBanner(user._id, token, formData)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setError(true);\r\n                    setIsLoading(false)\r\n                } else {\r\n                    loadBanners();\r\n                    setError('');\r\n                    setSuccess('Banner Created');\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const newBannerForm = () => (\r\n        <form onSubmit={clickSubmit} className=\"mb-4\">\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange('name')} value={name} name=\"\" id=\"\" placeholder='Banner Name' autoFocus required />\r\n\r\n            </div>\r\n            <div class=\"input-group mt-3\">\r\n                <div class=\"custom-file\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" name=\"photo\" accept=\"image/*\" />\r\n                    <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\r\n                </div>\r\n                <span className=\"input-group-append\"><button className=\"btn btn-outline-primary\">Create</button></span>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    useEffect(() => {\r\n        setValues({\r\n            ...values,\r\n            formData: new FormData()\r\n        });\r\n        loadBanners();\r\n    }, [])\r\n\r\n    const bannerTable = (banners) => {\r\n        banners.map((d, i) => {\r\n            banners[i].buttons = <button className=\"btn btn-sm btn-danger \" onClick={(e) => handledeleteBanner(d._id)}>\r\n                <i className=\"fa fa-ban\"></i>\r\n            </button>\r\n            banners[i].photo = <img src={`${API}/banner/photo/${banners[i]._id}`} className=\"img-thumbnail  border-0\" alt=\"\" width=\"100px\" height=\"100px\" />\r\n        })\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Id',\r\n                    field: '_id',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Photo',\r\n                    field: 'photo',\r\n                    sort: 'asc',\r\n                },\r\n                {\r\n                    label: 'Controls',\r\n                    field: 'buttons',\r\n                },\r\n            ],\r\n            rows: banners\r\n        }\r\n\r\n        return (\r\n            <MDBDataTable\r\n                striped\r\n                bordered\r\n                hover\r\n                searching\r\n                sortable\r\n                data={data}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return <h3 className=\"text-success\"> {success}</h3>\r\n        }\r\n    }\r\n    const showError = () => {\r\n        if (error) {\r\n            return <h3 className=\"text-danger\">Error! {error}</h3>\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <AdminDashboardLayout title=\"Add a new category\" description={`Hey ${user.name} ready to add category`} >\r\n            {loading_start_bool(isLoading)}\r\n            <div className=\"\">\r\n                <ol class=\"breadcrumb mb-4 mt-4\">\r\n                    <li class=\"breadcrumb-item\"><Link to='/admin/dashboard'>Dashboard</Link></li>\r\n                    <li class=\"breadcrumb-item active\">Banner</li>\r\n                    <div className=\"ml-auto\">\r\n                    </div>\r\n                </ol>{newBannerForm()}\r\n                {showSuccess()}\r\n                {showError()}\r\n                {bannerTable(banners)}\r\n            </div>\r\n\r\n        </AdminDashboardLayout>\r\n    )\r\n\r\n\r\n};\r\nexport default Banner;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signUp } from '../auth/index';\r\nimport { isAuthenticated,makephone } from '../auth/index'\r\nimport {verifyPhone} from './apiUser'\r\n\r\n\r\nconst VerifyPhone = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        otp: '',\r\n        error: '',\r\n        success: false\r\n    });\r\n\r\n    const {  otp, error, success } = values;\r\n    const {user} = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            [name]: event.target.value\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({\r\n            ...values,\r\n            error: false\r\n        })\r\n        verifyPhone(user._id,user.phone,otp)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error, success: false })\r\n                } else {\r\n                    \r\n                    makephone(data.done)\r\n                    setValues({\r\n                        ...values,\r\n                        error: '',\r\n                        success: true\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const signUpform = () => (\r\n        <form>\r\n            <div class=\"form-row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\"><label class=\"small mb-1\" for=\"inputFirstName\">OTP</label>\r\n                        <div className=\"input-group\">\r\n\r\n                            <input class=\"form-control py-4\" onChange={handleChange('otp')} value={otp} type=\"number\" aria-describedby=\"emailHelp\" placeholder=\"Enter OTP\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group mt-4 mb-0\">\r\n                <button onClick={clickSubmit} className=\"btn btn-primary btn-block\">Verfiy Account</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    )\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            Phone number Verified. Continue to <Link to='/user/dashboard'>Dashborad</Link>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"bg-primary\" id=\"layoutAuthentication\">\r\n            <div className=\"nav\" style={{ fontSize: '24px' }}>\r\n                <Link className=\"nav-link text-white\" to=\"/\"> <i class=\"fas fa-angle-left\"></i> Back</Link>\r\n            </div>\r\n            <div id=\"layoutAuthentication_content\">\r\n                <main>\r\n                    <div class=\"container\">\r\n                        <div class=\"row justify-content-center\">\r\n                            <div class=\"col-lg-5\">\r\n                                <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\r\n                                    <div class=\"card-header\"><h3 class=\"text-center font-weight-light my-4\">Verfiy Account</h3></div>\r\n                                    <div class=\"card-body\">\r\n                                        {signUpform()}\r\n                                        <div className=\"mt-3\">\r\n                                            {showSuccess()}\r\n                                            {showError()}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card-footer text-center\">\r\n                                        <div class=\"small\"><a href=\"register.html\">Have an account? Go to login</a></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default VerifyPhone;","import { API } from '../config'\r\n\r\n\r\n\r\nexport const read = (userId, token) => {\r\n\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\nexport const update = (userId, token, user) => {\r\n\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({'name':user})\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const updateuser = (user, next) => {\r\n    if (typeof window != \"undefined\") {\r\n        if (localStorage.getItem('jwt')) {\r\n            let auth = JSON.parse(localStorage.getItem('jwt'))\r\n            auth.user.name = user\r\n            localStorage.setItem('jwt', JSON.stringify(auth))\r\n            next();\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateuseraddress = (user) => {\r\n    if (typeof window != \"undefined\") {\r\n        if (localStorage.getItem('jwt')) {\r\n            let auth = JSON.parse(localStorage.getItem('jwt'))\r\n            auth.user.address = user\r\n            localStorage.setItem('jwt', JSON.stringify(auth))\r\n        }\r\n    }\r\n}\r\nexport const updatepassword = (userId, token, password,currentpassword) => {\r\n    \r\n    return fetch(`${API}/user/password/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({'currentpassword':currentpassword,\"password\":password})\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n// export const updateuserpassword  = (token, next) => {\r\n//     if (typeof window != \"undefined\") {\r\n//         if (localStorage.getItem('jwt')) {\r\n//             let auth = JSON.parse(localStorage.getItem('jwt'))\r\n//             auth.token = token\r\n//             localStorage.setItem('jwt', JSON.stringify(auth))\r\n//             next();\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\nexport const getPurchaseHistory = (userId, token) => {\r\n\r\n    return fetch(`${API}/orders/by/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getOrdeHistory = (userId, token) => {\r\n\r\n    return fetch(`${API}/orders/by/user/delcan/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const verifyPhone = (userId,phone,otp) => {\r\n\r\n    return fetch(`${API}/user/${userId}/verifyUser/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body:JSON.stringify({phone,otp})\r\n    })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { isAuthenticated } from '../auth/index'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { read, update, updateuser, updatepassword, updateuserpassword } from '../user/apiUser'\r\nimport AdminDashboardLayout from './AdminDashboardLayout'\r\nimport { loading_start_bool } from '../js/main'\r\n\r\n\r\nconst AdminProfile = ({ match }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        address: {},\r\n        pincode: '',\r\n        error: false,\r\n        success: false\r\n    })\r\n\r\n    const { name, email, phone, address, pincode } = values\r\n\r\n    const { user, token } = isAuthenticated()\r\n\r\n    const init = () => {\r\n        setIsLoading(true)\r\n        read(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setIsLoading(false)\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    address: data.address,\r\n                    name: data.name,\r\n                    phone: data.phone,\r\n                    pincode: data.pincode,\r\n                    email: data.email,\r\n                })\r\n                setIsLoading(false)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const handleChange = name => event => {\r\n        setValues({\r\n            ...values,\r\n            error: false,\r\n            success: false,\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const updateUserName = (event) => {\r\n        event.preventDefault()\r\n        setIsLoading(true)\r\n        update(user._id, token, name).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n                setIsLoading(false)\r\n            } else {\r\n                updateuser(name, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        error: false,\r\n                        name: data.name,\r\n                        success: 'User name changed'\r\n                    })\r\n                    setIsLoading(false)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const [debug, setDebug] = useState('')\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [])\r\n\r\n    const showUsernameSuccess = () => {\r\n        if (values.success) {\r\n            return (\r\n                <div className=\"alert alert-success mt-3\">\r\n                    {values.success}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    const showUsernameError = () => {\r\n        if (values.error) {\r\n            return (\r\n                <div className=\"alert alert-danger mt-3\">\r\n                    {values.error}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const profileUpdate = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange('name')} defaultValue={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <h6>{email}</h6>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Phone</label>\r\n                <h6>{phone}</h6>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={updateUserName}>Submit</button>\r\n            {showUsernameSuccess()}\r\n            {showUsernameError()}\r\n        </form>\r\n    )\r\n\r\n    const userAddress = () => (\r\n        <div className=\"mt-2\">\r\n            <hr />\r\n            <h6 className=\"font-weight-bold\">Address</h6>\r\n            <h6>{address.address || \"\"}</h6>\r\n            <h6>{address.city || \"\"}</h6>\r\n            <h6>{address.district || \"\"}</h6>\r\n            <h6>{address.state || \"\"}</h6>\r\n            <h6>{pincode || \"\"}</h6>\r\n            <h6>{address.land_marks || \"\"}</h6>\r\n        </div>\r\n    )\r\n\r\n\r\n    const [password, setPassword] = useState({\r\n        error: false,\r\n        success: false,\r\n        password: '',\r\n        currentpassword: ''\r\n    })\r\n\r\n\r\n\r\n    const handleChangePaassword = name => event => {\r\n        setPassword({\r\n            ...password,\r\n            error: false,\r\n            success: false,\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const handlepasswordChange = (event) => {\r\n        event.preventDefault()\r\n        setIsLoading(true)\r\n        updatepassword(user._id,\r\n            token,\r\n            password.password, password.currentpassword)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setPassword({ ...password, error: data.error })\r\n                    setIsLoading(false)\r\n                } else {\r\n                    setPassword({\r\n                        ...password,\r\n                        error: false,\r\n                        success: 'Password changed',\r\n                        password: '',\r\n                        currentpassword: ''\r\n                    })\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    const showPasswordSuccess = () => {\r\n        if (password.success) {\r\n            return (\r\n                <div className=\"alert alert-success mt-3 mb-2\">\r\n                    {password.success}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    const showPasswordError = () => {\r\n        if (password.error) {\r\n            return (\r\n                <div className=\"alert alert-danger mt-3 mb-2\">\r\n                    {password.error}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const passwordChange = () => (\r\n        <div className=\"mt-2\">\r\n            <hr />\r\n            <h6 className=\"font-weight-bold\">Password</h6>\r\n            {showPasswordSuccess()}\r\n            {showPasswordError()}\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Current Password</label>\r\n                    <input type=\"password\" className=\"form-control\" onChange={handleChangePaassword('currentpassword')} placeholder=\"Current password\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">New Password</label>\r\n                    <input type=\"password\" className=\"form-control\" onChange={handleChangePaassword('password')} placeholder=\"New password\" />\r\n                </div>\r\n                <button className=\"btn btn-primary mb-3\" onClick={handlepasswordChange}>Change Password</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <AdminDashboardLayout>\r\n            {loading_start_bool(isLoading)}\r\n            <ol class=\"breadcrumb mb-4 mt-4\">\r\n                <li class=\"breadcrumb-item\"><Link to='/user/dashboard'>Dashboard</Link></li>\r\n                <li class=\"breadcrumb-item active\">Edit Profile</li>\r\n            </ol>\r\n            {profileUpdate()}\r\n            {userAddress()}\r\n            {passwordChange()}\r\n        </AdminDashboardLayout>\r\n    )\r\n}\r\n\r\nexport default AdminProfile;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Signup from './user/Signup'\r\nimport Signin from './user/Signin'\r\nimport Home from './core/Home'\r\nimport AdminRoute from './auth/AdminRoute';\r\nimport AdminDashboard from './user/AdminDashboard';\r\nimport AddCategory from './admin/AddCategory';\r\nimport AddProduct from './admin/AddProduct'\r\nimport Orders from './admin/Orders';\r\nimport ManageProducts from './admin/ManageProducts';\r\nimport UpdateProduct from './admin/UpdateProduct';\r\nimport OrdersProcessing from './admin/OrdersProcessing';\r\nimport OrdersDelCancel from './admin/OrdersDelCancel';\r\nimport Banner from './admin/Banner';\r\nimport VerifyPhone from './user/VerifyPhone';\r\nimport AdminProfile from './admin/AdminProfile';\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/signin\" exact component={Signin}></Route>\r\n                <Route path=\"/signup\" exact component={Signup}></Route>\r\n                <Route path=\"/user/:userId/verifyphone/:phone\" exact component={VerifyPhone}></Route>\r\n                <Route path=\"/\" exact component={Home}></Route>\r\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard}></AdminRoute>\r\n                <AdminRoute path=\"/create/category\" exact component={AddCategory}></AdminRoute>\r\n                <AdminRoute path=\"/create/product\" exact component={AddProduct}></AdminRoute>\r\n                <AdminRoute path=\"/admin/orders\" exact component={Orders}></AdminRoute>\r\n                <AdminRoute path=\"/admin/products\" exact component={ManageProducts}></AdminRoute>\r\n                <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct}></AdminRoute>\r\n                <AdminRoute path=\"/admin/orders-delcancel\" exact component={OrdersDelCancel}></AdminRoute>\r\n                <AdminRoute path=\"/admin/orders-processing\" exact component={OrdersProcessing}></AdminRoute>\r\n                <AdminRoute path=\"/admin/banner\" exact component={Banner}></AdminRoute>\r\n                <AdminRoute path=\"/admin/profile/:userId\" exact component={AdminProfile}></AdminRoute>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}